1、一个".java"源文件中是否可以包括多个类（不是内部类）？有什么限制？
答:可以,但是只能有一个公共类,且与文件名要相同.
  
2、Java有没有goto?
答:goto是java语言中的保留字,目前还没有在java中使用。

3、说说&和&&的区别。
答:&就是常说的and,表示要同时满足两边的表达式结果才是true;而&&是双与,有短路效果,即如果左边的表达式不满足,则不再继续判断右边是否满足,提高了效率.

4、在JAVA中如何跳出当前的多重嵌套循环？
答:方法一:可以在外层循环加一个标志,即"label:"这种语法,然后内层循环直接break label;方法二:可以使外层循环的循环条件受到内层循环的控制,在内层置为false.

5、switch语句能否作用在byte上，能否作用在long上，能否作用在String上?
答:switch语句可以作用在int或者枚举常量上,其中能够隐式转换为int的也是int型.显然,long和String不满足.

6、short s1= 1; s1 =s1 + 1;有什么错? short s1 = 1; s1 += 1;有什么错?(没有错)
答: s1=s1+1是不会进行自动类型提升的,所以会报错,需要强转为int,因为1默认是int类型;而s1+=1;是会进行自动类型提升的.

7、char型变量中能不能存贮一个中文汉字?为什么?
答:可以.char叫字符类型,而一个汉字就是一个字符,占两个字节.

8、用最有效率的方法算出2乘以8等于几?
答:左移位,一个数左移几位就相当于这个数乘以2的几次方,即2<<3,相当于2*2^3

9、使用final关键字修饰一个变量时，是引用不能变，还是引用的对象不能变？
答:如果修饰的是基本数据类型,肯定不能变得.如果修饰的是引用类型,则是指引用不能变,但是引用指向的对象数据还是可以变的.

10，静态变量和实例变量的区别？
答:静态变量：独立存在的变量，只是位置放在某个类下，可以直接类名加点调用静态变量名使用。并且是项目或程序一启动运行到该类时就直接常驻内存。
不需要初始化类再调用该变量。用关键字static声明。静态方法也是同样，可以直接调用。
实例变量：就是相当于该类的属性，需要先初始化该类，就是new 该类后，才可以调用。但是该类未被再次使用，被垃圾回收器回收后，该实例也将不存在了，
就是不在内存中了。
区别如下：
1.存储区域不同：静态变量存储在静态存储区，普通变量存储在堆中；
2.静态变量与类相关，普通变量则与实例相关
3.内存分配方式不同。
4.生命周期不同

11、是否可以从一个static方法内部发出对非static方法的调用？
答:不能.非static方法只能由实例调用.就像我们虽然都是人,但是你的钱不是只要是人就可以用的.

12、Integer与int的区别
答:int是基本数据类型,Integer是引用数据类型.但是java底层提供了自动装箱拆箱.在-128到127之间,他们两个怎么都是相等的,因为会有个缓存区,超过这个范围,
这两个赋值的变量就不再相等.

13、Math.round(11.5)等于多少?Math.round(-11.5)等于多少?
答:12,-11;相信一看答案就明白了.取离它最近的那个整数.符合四舍五入原则.

14、Overload和Override的区别？Overloaded的方法是否可以改变返回值的类型?
答:分别是方法的重载与重写.重写是指除了方法体可以改,其余都不能改.重载是参数签名不同都叫重载,与返回值没有半毛钱关系.重写发生在不同类中,而重写在同一类中.

15、接口是否可继承接口?抽象类是否可实现(implements)接口?抽象类是否可继承具体类(concreteclass)?抽象类中是否可以有静态的main方法？
答:接口可以继承接口.抽象类不可实现接口,如果实现了就与抽象矛盾了.抽象类可继承具体类,因为Object是任何类的子类,它是具体类,但是所继承的类
必须暴露一个公共的构造器.抽象类中也可以有静态main方法,只要不要在方法中去调用抽象方法即可.

16、Java中实现多态的机制是什么？
答:java中的多态有四种,强制的多态:自动类型转换;重载的多态:即操作符的重载,就像+号不同用法;参数的重载:为不同类型参数提供相同操作
